#############################################################################
# Makefile for building: libantlr.a
# Generated by qmake (2.01a) (Qt 4.8.7) on: Mon Apr 25 12:31:49 2016
# Project:  antlr.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = clang
CXX           = clang++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -mmacosx-version-min=10.7 -O2 -arch x86_64 -fPIC -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -fPIC -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Cellar/qt/4.8.7_2/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt/4.8.7_2/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7_2/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7_2/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7_2/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7_2/include -I. -Irelease -F/usr/local/Cellar/qt/4.8.7_2/lib
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.7

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = src/TreeParser.cpp \
		src/TokenStreamSelector.cpp \
		src/TokenStreamRewriteEngine.cpp \
		src/TokenStreamHiddenTokenFilter.cpp \
		src/TokenStreamBasicFilter.cpp \
		src/TokenRefCount.cpp \
		src/TokenBuffer.cpp \
		src/Token.cpp \
		src/String.cpp \
		src/RecognitionException.cpp \
		src/Parser.cpp \
		src/NoViableAltForCharException.cpp \
		src/NoViableAltException.cpp \
		src/MismatchedTokenException.cpp \
		src/MismatchedCharException.cpp \
		src/LLkParser.cpp \
		src/InputBuffer.cpp \
		src/CommonToken.cpp \
		src/CommonHiddenStreamToken.cpp \
		src/CommonASTWithHiddenTokens.cpp \
		src/CommonAST.cpp \
		src/CharScanner.cpp \
		src/CharBuffer.cpp \
		src/BitSet.cpp \
		src/BaseAST.cpp \
		src/ASTRefCount.cpp \
		src/ASTNULLType.cpp \
		src/ASTFactory.cpp \
		src/ANTLRUtil.cpp 
OBJECTS       = release/TreeParser.o \
		release/TokenStreamSelector.o \
		release/TokenStreamRewriteEngine.o \
		release/TokenStreamHiddenTokenFilter.o \
		release/TokenStreamBasicFilter.o \
		release/TokenRefCount.o \
		release/TokenBuffer.o \
		release/Token.o \
		release/String.o \
		release/RecognitionException.o \
		release/Parser.o \
		release/NoViableAltForCharException.o \
		release/NoViableAltException.o \
		release/MismatchedTokenException.o \
		release/MismatchedCharException.o \
		release/LLkParser.o \
		release/InputBuffer.o \
		release/CommonToken.o \
		release/CommonHiddenStreamToken.o \
		release/CommonASTWithHiddenTokens.o \
		release/CommonAST.o \
		release/CharScanner.o \
		release/CharBuffer.o \
		release/BitSet.o \
		release/BaseAST.o \
		release/ASTRefCount.o \
		release/ASTNULLType.o \
		release/ASTFactory.o \
		release/ANTLRUtil.o
DIST          = /usr/local/Cellar/qt/4.8.7_2/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/debug_and_release.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/build_pass.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/staticlib.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/static.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.7_2/mkspecs/features/include_source_dir.prf \
		antlr.pro
QMAKE_TARGET  = antlr
DESTDIR       = 
TARGET        = libantlr.a

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-arch \
		x86_64 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.antlr.Release $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)
	$(RANLIB) $(TARGET)


qmake:  FORCE
	@$(QMAKE) -o Makefile.antlr.Release antlr.pro

dist: 
	@$(CHK_DIR_EXISTS) release/antlr1.0.0 || $(MKDIR) release/antlr1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/antlr1.0.0/ && $(COPY_FILE) --parents antlr/config.hpp antlr/TreeParserSharedInputState.hpp antlr/TreeParser.hpp antlr/TokenWithIndex.hpp antlr/TokenStreamSelector.hpp antlr/TokenStreamRewriteEngine.hpp antlr/TokenStreamRetryException.hpp antlr/TokenStreamRecognitionException.hpp antlr/TokenStreamIOException.hpp antlr/TokenStreamHiddenTokenFilter.hpp antlr/TokenStreamException.hpp antlr/TokenStreamBasicFilter.hpp antlr/TokenStream.hpp antlr/TokenRefCount.hpp antlr/TokenBuffer.hpp antlr/Token.hpp antlr/String.hpp antlr/SemanticException.hpp antlr/RefCount.hpp antlr/RecognitionException.hpp antlr/ParserSharedInputState.hpp antlr/Parser.hpp antlr/NoViableAltForCharException.hpp antlr/NoViableAltException.hpp antlr/MismatchedTokenException.hpp antlr/MismatchedCharException.hpp antlr/LexerSharedInputState.hpp antlr/LLkParser.hpp antlr/InputBuffer.hpp antlr/IOException.hpp antlr/CommonToken.hpp antlr/CommonHiddenStreamToken.hpp antlr/CommonASTWithHiddenTokens.hpp antlr/CommonAST.hpp antlr/CircularQueue.hpp antlr/CharStreamIOException.hpp antlr/CharStreamException.hpp antlr/CharScanner.hpp antlr/CharInputBuffer.hpp antlr/CharBuffer.hpp antlr/BitSet.hpp antlr/BaseAST.hpp antlr/ASTRefCount.hpp antlr/ASTPair.hpp antlr/ASTNULLType.hpp antlr/ASTFactory.hpp antlr/ASTArray.hpp antlr/AST.hpp antlr/ANTLRUtil.hpp antlr/ANTLRException.hpp release/antlr1.0.0/ && $(COPY_FILE) --parents src/TreeParser.cpp src/TokenStreamSelector.cpp src/TokenStreamRewriteEngine.cpp src/TokenStreamHiddenTokenFilter.cpp src/TokenStreamBasicFilter.cpp src/TokenRefCount.cpp src/TokenBuffer.cpp src/Token.cpp src/String.cpp src/RecognitionException.cpp src/Parser.cpp src/NoViableAltForCharException.cpp src/NoViableAltException.cpp src/MismatchedTokenException.cpp src/MismatchedCharException.cpp src/LLkParser.cpp src/InputBuffer.cpp src/CommonToken.cpp src/CommonHiddenStreamToken.cpp src/CommonASTWithHiddenTokens.cpp src/CommonAST.cpp src/CharScanner.cpp src/CharBuffer.cpp src/BitSet.cpp src/BaseAST.cpp src/ASTRefCount.cpp src/ASTNULLType.cpp src/ASTFactory.cpp src/ANTLRUtil.cpp release/antlr1.0.0/ && (cd `dirname release/antlr1.0.0` && $(TAR) antlr1.0.0.tar antlr1.0.0 && $(COMPRESS) antlr1.0.0.tar) && $(MOVE) `dirname release/antlr1.0.0`/antlr1.0.0.tar.gz . && $(DEL_FILE) -r release/antlr1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.antlr.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

release/TreeParser.o: src/TreeParser.cpp antlr/TreeParser.hpp \
		antlr/config.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/ASTFactory.hpp \
		antlr/ASTArray.hpp \
		antlr/ASTPair.hpp \
		antlr/BitSet.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/MismatchedTokenException.hpp \
		antlr/TreeParserSharedInputState.hpp \
		antlr/RefCount.hpp \
		antlr/ASTNULLType.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TreeParser.o src/TreeParser.cpp

release/TokenStreamSelector.o: src/TokenStreamSelector.cpp antlr/TokenStreamSelector.hpp \
		antlr/config.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/TokenStreamRetryException.hpp \
		antlr/TokenStreamException.hpp \
		antlr/ANTLRException.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TokenStreamSelector.o src/TokenStreamSelector.cpp

release/TokenStreamRewriteEngine.o: src/TokenStreamRewriteEngine.cpp antlr/config.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/TokenWithIndex.hpp \
		antlr/CommonToken.hpp \
		antlr/String.hpp \
		antlr/BitSet.hpp \
		antlr/TokenStreamRewriteEngine.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TokenStreamRewriteEngine.o src/TokenStreamRewriteEngine.cpp

release/TokenStreamHiddenTokenFilter.o: src/TokenStreamHiddenTokenFilter.cpp antlr/TokenStreamHiddenTokenFilter.hpp \
		antlr/config.hpp \
		antlr/TokenStreamBasicFilter.hpp \
		antlr/BitSet.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/CommonHiddenStreamToken.hpp \
		antlr/CommonToken.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TokenStreamHiddenTokenFilter.o src/TokenStreamHiddenTokenFilter.cpp

release/TokenStreamBasicFilter.o: src/TokenStreamBasicFilter.cpp antlr/TokenStreamBasicFilter.hpp \
		antlr/config.hpp \
		antlr/BitSet.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TokenStreamBasicFilter.o src/TokenStreamBasicFilter.cpp

release/TokenRefCount.o: src/TokenRefCount.cpp antlr/TokenRefCount.hpp \
		antlr/config.hpp \
		antlr/Token.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TokenRefCount.o src/TokenRefCount.cpp

release/TokenBuffer.o: src/TokenBuffer.cpp antlr/TokenBuffer.hpp \
		antlr/config.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/CircularQueue.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/TokenBuffer.o src/TokenBuffer.cpp

release/Token.o: src/Token.cpp antlr/Token.hpp \
		antlr/config.hpp \
		antlr/TokenRefCount.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Token.o src/Token.cpp

release/String.o: src/String.cpp antlr/String.hpp \
		antlr/config.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/String.o src/String.cpp

release/RecognitionException.o: src/RecognitionException.cpp antlr/RecognitionException.hpp \
		antlr/config.hpp \
		antlr/ANTLRException.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/RecognitionException.o src/RecognitionException.cpp

release/Parser.o: src/Parser.cpp antlr/Parser.hpp \
		antlr/config.hpp \
		antlr/BitSet.hpp \
		antlr/TokenBuffer.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/CircularQueue.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/MismatchedTokenException.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/ASTFactory.hpp \
		antlr/ASTArray.hpp \
		antlr/ASTPair.hpp \
		antlr/ParserSharedInputState.hpp \
		antlr/RefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Parser.o src/Parser.cpp

release/NoViableAltForCharException.o: src/NoViableAltForCharException.cpp antlr/NoViableAltForCharException.hpp \
		antlr/config.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/CharScanner.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/SemanticException.hpp \
		antlr/MismatchedCharException.hpp \
		antlr/BitSet.hpp \
		antlr/InputBuffer.hpp \
		antlr/CircularQueue.hpp \
		antlr/LexerSharedInputState.hpp \
		antlr/RefCount.hpp \
		antlr/CharBuffer.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/NoViableAltForCharException.o src/NoViableAltForCharException.cpp

release/NoViableAltException.o: src/NoViableAltException.cpp antlr/NoViableAltException.hpp \
		antlr/config.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/NoViableAltException.o src/NoViableAltException.cpp

release/MismatchedTokenException.o: src/MismatchedTokenException.cpp antlr/MismatchedTokenException.hpp \
		antlr/config.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/BitSet.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/MismatchedTokenException.o src/MismatchedTokenException.cpp

release/MismatchedCharException.o: src/MismatchedCharException.cpp antlr/CharScanner.hpp \
		antlr/config.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/SemanticException.hpp \
		antlr/MismatchedCharException.hpp \
		antlr/BitSet.hpp \
		antlr/InputBuffer.hpp \
		antlr/CircularQueue.hpp \
		antlr/LexerSharedInputState.hpp \
		antlr/RefCount.hpp \
		antlr/CharBuffer.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/MismatchedCharException.o src/MismatchedCharException.cpp

release/LLkParser.o: src/LLkParser.cpp antlr/LLkParser.hpp \
		antlr/config.hpp \
		antlr/Parser.hpp \
		antlr/BitSet.hpp \
		antlr/TokenBuffer.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/CircularQueue.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/MismatchedTokenException.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/ASTFactory.hpp \
		antlr/ASTArray.hpp \
		antlr/ASTPair.hpp \
		antlr/ParserSharedInputState.hpp \
		antlr/RefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/LLkParser.o src/LLkParser.cpp

release/InputBuffer.o: src/InputBuffer.cpp antlr/config.hpp \
		antlr/InputBuffer.hpp \
		antlr/CircularQueue.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/InputBuffer.o src/InputBuffer.cpp

release/CommonToken.o: src/CommonToken.cpp antlr/CommonToken.hpp \
		antlr/config.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/String.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CommonToken.o src/CommonToken.cpp

release/CommonHiddenStreamToken.o: src/CommonHiddenStreamToken.cpp antlr/CommonHiddenStreamToken.hpp \
		antlr/config.hpp \
		antlr/CommonToken.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CommonHiddenStreamToken.o src/CommonHiddenStreamToken.cpp

release/CommonASTWithHiddenTokens.o: src/CommonASTWithHiddenTokens.cpp antlr/config.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/BaseAST.hpp \
		antlr/CommonAST.hpp \
		antlr/CommonASTWithHiddenTokens.hpp \
		antlr/CommonHiddenStreamToken.hpp \
		antlr/CommonToken.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CommonASTWithHiddenTokens.o src/CommonASTWithHiddenTokens.cpp

release/CommonAST.o: src/CommonAST.cpp antlr/config.hpp \
		antlr/CommonAST.hpp \
		antlr/BaseAST.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/ANTLRUtil.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CommonAST.o src/CommonAST.cpp

release/CharScanner.o: src/CharScanner.cpp antlr/CharScanner.hpp \
		antlr/config.hpp \
		antlr/TokenStream.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/RecognitionException.hpp \
		antlr/ANTLRException.hpp \
		antlr/SemanticException.hpp \
		antlr/MismatchedCharException.hpp \
		antlr/BitSet.hpp \
		antlr/InputBuffer.hpp \
		antlr/CircularQueue.hpp \
		antlr/LexerSharedInputState.hpp \
		antlr/RefCount.hpp \
		antlr/CharBuffer.hpp \
		antlr/CommonToken.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CharScanner.o src/CharScanner.cpp

release/CharBuffer.o: src/CharBuffer.cpp antlr/CharBuffer.hpp \
		antlr/config.hpp \
		antlr/InputBuffer.hpp \
		antlr/CircularQueue.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CharBuffer.o src/CharBuffer.cpp

release/BitSet.o: src/BitSet.cpp antlr/BitSet.hpp \
		antlr/config.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/BitSet.o src/BitSet.cpp

release/BaseAST.o: src/BaseAST.cpp antlr/config.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/BaseAST.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/BaseAST.o src/BaseAST.cpp

release/ASTRefCount.o: src/ASTRefCount.cpp antlr/ASTRefCount.hpp \
		antlr/config.hpp \
		antlr/AST.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ASTRefCount.o src/ASTRefCount.cpp

release/ASTNULLType.o: src/ASTNULLType.cpp antlr/config.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/ASTNULLType.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ASTNULLType.o src/ASTNULLType.cpp

release/ASTFactory.o: src/ASTFactory.cpp antlr/CommonAST.hpp \
		antlr/config.hpp \
		antlr/BaseAST.hpp \
		antlr/AST.hpp \
		antlr/ASTRefCount.hpp \
		antlr/Token.hpp \
		antlr/TokenRefCount.hpp \
		antlr/ANTLRException.hpp \
		antlr/IOException.hpp \
		antlr/ASTFactory.hpp \
		antlr/ASTArray.hpp \
		antlr/ASTPair.hpp \
		antlr/ANTLRUtil.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ASTFactory.o src/ASTFactory.cpp

release/ANTLRUtil.o: src/ANTLRUtil.cpp antlr/config.hpp \
		antlr/IOException.hpp \
		antlr/ANTLRException.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/ANTLRUtil.o src/ANTLRUtil.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

